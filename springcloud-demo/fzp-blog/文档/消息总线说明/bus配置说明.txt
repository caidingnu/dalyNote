1、客户端 两个依赖（可以提到父工程）

2、配置文件名称  bootstrap.yml（优先级最高）

3、客户端配置文件：
#客户端默认是30s发送一次心跳，90s服务端没有收到心跳就把服务剔除
spring:
  #-----------------本地-----------------
  cloud:
    config:
      discovery:
        enabled: true
        service-id: config-server
      #      uri: http://localhost:8888/   #直接用ip调用配置中心服务端，用于没有将配置中心服务端注册到注册中心的时候
      name: config-client
      profile: pro
      #dev开发环境配置文件
      #test测试环境
      #pro正式环境
#------------  GItHub---------------
#  cloud:
#    config:
#      server:
#        git:
#          uri: http://localhost:8888/
#          search-paths: respo
#          username:
#          password:
#      label: master
#      profile: dev


      ############################### 以下是消息总线配置 ###################################################
      ## 开启消息跟踪
    bus:
      enabled: true
      trace:
        enabled: true
  rabbitmq:
    host: localhost
    port: 5672
    username: cdn
    password: 123456
# 刷新配置，在spring boot 2.x 之前1.x的management.security.enabled失效，新的配置为
management:
  endpoints:
    web:
      exposure:
        include: refresh

4、先启动rabbitmq
127.0.0.1:15672能进入管理界面

		
5、有@Value的controller上（客户端），必须加@RefreshScope注解	
		
		
6、启动项目，启动日志中出现：{[/actuator/refresh],methods=[POST],说明配置成功


7、修改配置之后，向配置中心手动发送post请求，刷新配置
http://127.0.0.1:888/actuator/refresh
	


